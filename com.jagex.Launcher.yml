app-id: com.jagex.Launcher
sdk: org.gnome.Sdk
runtime: org.gnome.Platform
runtime-version: '45'
command: jagex-run
base: org.winehq.Wine
base-version: stable-23.08
finish-args:
  - --share=ipc
  - --socket=x11
  - --socket=wayland
  - --socket=pulseaudio
  - --device=dri
  - --share=network
  - --allow=multiarch
  - --allow=devel
inherit-extensions:
  - org.freedesktop.Platform.GL32
  - org.freedesktop.Platform.ffmpeg-full
  - org.freedesktop.Platform.ffmpeg_full.i386
  - org.winehq.Wine.gecko
  - org.winehq.Wine.mono
  - org.winehq.Wine.DLLs

add-extensions:
  org.gnome.Platform.Compat.i386:
    directory: lib/i386-linux-gnu
    version: '45'

  org.gnome.Platform.Compat.i386.Debug:
    directory: lib/debug/lib/i386-linux-gnu
    version: '45'
    no-autodownload: true

sdk-extensions:
  - org.gnome.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386
  - org.freedesktop.Sdk.Extension.openjdk11
  - org.freedesktop.Sdk.Extension.mono6

x-compat-i386-opts:
  prepend-pkg-config-path: /app/lib32/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig
  ldflags: -L/app/lib32
  append-path: /usr/lib/sdk/toolchain-i386/bin
  env:
    CC: i686-unknown-linux-gnu-gcc
    CXX: i686-unknown-linux-gnu-g++
  libdir: /app/lib32

modules:
  - name: openjdk
    buildsystem: simple
    build-commands:
      - /usr/lib/sdk/openjdk11/install.sh
  - name: wine-ge
    buildsystem: simple
    build-commands:
      - tar xf wine.tar.xz
      - install --directory /app/opt
      - mv lutris-GE-Proton8-24-x86_64 /app/opt/wine
    sources:
      - type: file
        dest-filename: wine.tar.xz
        url: https://github.com/GloriousEggroll/wine-ge-custom/releases/download/GE-Proton8-25/wine-lutris-GE-Proton8-25-x86_64.tar.xz
        sha512: 03bc8e5f77a82226cc89d6141be4dd77afad003d23ce4fb98987b4446318c7c68953b5a10c379cbaf042a9185dd4629895e14cd9878b272cf74139ac0c07ee63
        x-checker-data:
          type: json
          url: https://api.github.com/repos/GloriousEggroll/wine-ge-custom/releases/latest
          version-query: .tag_name | sub("^GE-Proton-"; "")
          url-query: .assets[] | select(.name=="wine-lutris-" + $version + "-x86_64.tar.xz")
            | .browser_download_url
  - name: runelite-jar
    buildsystem: simple
    build-commands:
      - mv RuneLite.jar /app/
      - mv RuneLite.exe /app/
    sources:
      - type: file
        dest-filename: RuneLite.jar
        url: https://github.com/runelite/launcher/releases/download/2.6.10/RuneLite.jar
        sha256: b73561c714ad58984669f0b909731d4cc4c6bacdbf07d227006243d1b566138b
        x-checker-data:
          type: json
          url: https://api.github.com/repos/runelite/launcher/releases
          version-query: first(.[] | select(.assets[] | .name == "RuneLite.jar"))
            | .tag_name
          url-query: first(.[] | select(.assets[] | .name == "RuneLite.jar")) .assets[]
            | select(.name == "RuneLite.jar") | .browser_download_url
      - type: script
        dest-filename: RuneLite.exe   # We name this bash script .exe bc Jagex Launcher runs RuneLite.exe. Wine is able to somehow intepret it is a bash script and run that instead.
        commands:
          - 
              #!/bin/bash
          - set -x
          - /app/jre/bin/java -Duser.home="$XDG_DATA_HOME/user_home" -jar /app/RuneLite.jar
            -J-Duser.home="$XDG_DATA_HOME/user_home"
  - name: hdos-jar
    buildsystem: simple
    build-commands:
      - mv hdos-launcher.jar /app/
      - mv HDOS.exe /app/
    sources:
      - type: file
        dest-filename: hdos-launcher.jar
        url: https://cdn.hdos.dev/launcher/v8/hdos-launcher.jar
        sha256: d3475d791fa8bfa4e3ae7fa9b1c5e86a8e02d1e93f88ff4776582af78ea92fc0
        x-checker-data:
          type: html
          url: https://cdn.hdos.dev/client/getdown.txt
          version-pattern: launcher.version = (\d.*)
          url-template: https://cdn.hdos.dev/launcher/v$version/hdos-launcher.jar
      - type: script
        dest-filename: HDOS.exe # We name this bash script .exe bc Jagex Launcher runs RuneLite.exe. Wine is able to somehow intepret it is a bash script and run that instead.
        commands:
          - 
            #!/bin/bash
          - /app/jre/bin/java -jar /app/hdos-launcher.jar
  - name: jagex-launcher
    buildsystem: simple
    build-commands:
      - install jagex-install /app/bin
      - install -Dm644 com.jagex.Launcher.desktop /app/share/applications/com.jagex.Launcher.desktop
      - install -Dm644 com.jagex.Launcher.metainfo.xml /app/share/metainfo/com.jagex.Launcher.metainfo.xml
      - install -Dm644 512.png /app/share/icons/hicolor/512x512/apps/com.jagex.Launcher.png
      - install -Dm644 steamdeck-settings.properties /app/steamdeck-settings.properties
    sources:
      - type: file
        path: jagex-launcher-linux/resources/installer.py
        dest-filename: jagex-install
      - type: file
        path: com.jagex.Launcher.desktop
      - type: file
        path: com.jagex.Launcher.metainfo.xml
      - type: file
        path: icons/512/512.png
      - type: file
        path: jagex-launcher-linux/resources/steamdeck-settings.properties
  - name: launch-script
    buildsystem: simple
    build-commands:
      - install -D jagex-run -t /app/bin
    sources:
      - type: file
        dest-filename: jagex-run
        path: scripts/jagex-run.sh
